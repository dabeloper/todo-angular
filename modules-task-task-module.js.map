{"version":3,"sources":["webpack:///./src/app/modules/task/components/task-form/task-form.component.css","webpack:///./src/app/modules/task/components/task-form/task-form.component.html","webpack:///./src/app/modules/task/components/task-form/task-form.component.ts","webpack:///./src/app/modules/task/components/tasklist/tasklist.component.css","webpack:///./src/app/modules/task/components/tasklist/tasklist.component.html","webpack:///./src/app/modules/task/components/tasklist/tasklist.component.ts","webpack:///./src/app/modules/task/task-routing.module.ts","webpack:///./src/app/modules/task/task.component.css","webpack:///./src/app/modules/task/task.component.html","webpack:///./src/app/modules/task/task.component.ts","webpack:///./src/app/modules/task/task.module.ts"],"names":[],"mappings":"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","file":"modules-task-task-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<h2> Agregar Nueva Tarea </h2>\\n<form (ngSubmit)=\\\"addTask()\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"id\\\">Nombre</label>\\n    <div class=\\\"form-input\\\">\\n      <input type=\\\"text\\\" class=\\\"form-input\\\" name=\\\"name\\\" [(ngModel)]=\\\"task.name\\\"/>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"id\\\">Categoria</label>\\n    <div class=\\\"form-input\\\">\\n      <input type=\\\"text\\\" class=\\\"form-input\\\" name=\\\"category\\\" [(ngModel)]=\\\"task.category\\\"/>\\n    </div>\\n  </div>\\n\\n  <input type=\\\"submit\\\" name=\\\"\\\" value=\\\"{{status}}\\\" class=\\\"btn-primary\\\" />\\n</form>\\n\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { Task } from '../../../../models/task';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css']\n})\nexport class TaskFormComponent implements OnInit {\n\n  @Output() public onSubmit = new EventEmitter<any>();\n  @Input(\"tareaEditar\") task: Task;\n  @Input() status: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.task = new Task();\n    this.status = \"Agregar\";\n  }\n  \n  addTask(){\n    this.onSubmit.emit(this.task);\n    this.task = new Task();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1> Las tareas de {{owner}} </h1>\\n\\n<div *ngIf=\\\"tareas?.length; else notask\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let task of tareas\\\" class=\\\"list-group-item\\\">\\n      {{task.name}} -- {{task.category}}\\n      <button type=\\\"button\\\" (click)=\\\"editTask(event,task)\\\" class=\\\"btn btn-info mx-2\\\">Editar</button>\\n      <button type=\\\"button\\\" (click)=\\\"deleteTask(event,task)\\\" class=\\\"btn btn-danger mx-2\\\">Eliminar</button>\\n    </li>\\n  </ul>\\n</div>\\n\\n\\n<ng-template #notask>\\n  <h2>No hay tareas</h2>\\n</ng-template>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Task } from '../../../../models/task';\n\n\n@Component({\n  selector: 'app-tasklist',\n  templateUrl: './tasklist.component.html',\n  styleUrls: ['./tasklist.component.css']\n})\nexport class TasklistComponent implements OnInit {\n\n  owner: string = \"NN\";\n  @Input() public tareas:Task[];\n  @Output() public onDelete = new EventEmitter<void>();\n  @Output() public onEdit = new EventEmitter<void>();\n\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n  deleteTask(e,task){\n    this.onDelete.emit(task);\n  }\n  \n  editTask(e,task){\n    this.onEdit.emit(task);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskComponent } from './task.component';\nimport { TasklistComponent } from './components/tasklist/tasklist.component';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"tarea\", pathMatch:\"full\"},\n  { path: \"tarea\", component: TaskComponent},\n  { path: \"tareas\", component: TasklistComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TaskRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-tasklist [tareas]=\\\"tareas\\\"\\n              (onDelete)=\\\"deleteTask($event)\\\"\\n              (onEdit)=\\\"editTask($event)\\\"></app-tasklist>\\n\\n<app-task-form  [tareaEditar]=\\\"tareaEnEdicion\\\"\\n                [status]=\\\"status\\\"\\n                (onSubmit)=\\\"procesarFormulario($event)\\\"></app-task-form>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Task } from '../../models/task';\nimport { TaskService } from '../../services/task.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit, OnDestroy {\n\n  tareas: Task[];\n  tareaEnEdicion: Task;\n  status: string;\n\n  private _subscripctions: Subscription[] = [];\n  constructor(private tareasService:TaskService) { \n    this.tareas = []; \n  }\n\n  ngOnInit() {\n    this._subscripctions.push( this.tareasService.getTasks().subscribe( (tasks)=>{\n      this.tareas = tasks;\n    } ));\n    this.status = \"Agregar\";\n  }\n\n  ngOnDestroy(){\n    this._subscripctions.forEach(\n      subscription => subscription.unsubscribe()\n    );\n  }\n\n  deleteTask(tarea: Task){\n    this.tareasService.delTask(tarea);\n  }\n\n  editTask(tarea:Task){\n    this.tareaEnEdicion = tarea;\n    this.status = \"Editar\";\n  }\n\n  procesarFormulario(task:Task){\n    \n    if(this.status==\"Agregar\"){\n      this.tareasService.addTask(task);\n    }else{\n      this.tareasService.updateTask(task);\n    }\n\n    this.status = \"Agregar\";\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TaskRoutingModule } from './task-routing.module';\nimport { TaskComponent } from './task.component';\nimport { TasklistComponent } from './components/tasklist/tasklist.component';\nimport { TaskFormComponent } from './components/task-form/task-form.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TaskRoutingModule,\n    FormsModule\n  ],\n  declarations: [TaskComponent, TasklistComponent, TaskFormComponent]\n})\nexport class TaskModule { }\n"],"sourceRoot":""}